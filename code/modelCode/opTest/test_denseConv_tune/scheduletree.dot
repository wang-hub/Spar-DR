digraph "Schedule Tree" {
	graph [rankdir=BT]
	subgraph cluster_legend {
		label=Legend
		legend [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4"><TR><TD BGCOLOR="#FFFFFF"></TD><TD BGCOLOR="white">kDataPar</TD></TR><TR><TD BGCOLOR="#2980B9"></TD><TD BGCOLOR="white">kThreadIndex</TD></TR><TR><TD BGCOLOR="#FAD7A0"></TD><TD BGCOLOR="white">kCommReduce</TD></TR><TR><TD BGCOLOR="#D35400"></TD><TD BGCOLOR="white">kOrdered</TD></TR><TR><TD BGCOLOR="#ABB2B9"></TD><TD BGCOLOR="white">kOpaque</TD></TR><TR><TD BGCOLOR="#D2B4DE"></TD><TD BGCOLOR="white">kUnrolled</TD></TR><TR><TD BGCOLOR="#AED6F1"></TD><TD BGCOLOR="white">kVectorized</TD></TR><TR><TD BGCOLOR="#F5B7B1"></TD><TD BGCOLOR="white">kParallelized</TD></TR><TR><TD BGCOLOR="#A9DFBF"></TD><TD BGCOLOR="white">kTensorized</TD></TR></TABLE>> margin=0 shape=none]
	}
	Stage_0 [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4"> <TR><TD BGCOLOR="lightgrey" COLSPAN="2" PORT="stage">data<br/>Scope: </TD></TR></TABLE>> margin=0 shape=none]
	Stage_1 [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4"> <TR><TD BGCOLOR="lightgrey" COLSPAN="2" PORT="stage">pad_temp<br/>Scope: </TD></TR><TR><TD PORT="IterVar_1_0" BGCOLOR="#FFFFFF">0</TD><TD BGCOLOR="white" PORT="itervar">i0: int32(kDataPar)<br/>range(min=0, ext=1)</TD></TR><TR><TD PORT="IterVar_1_1" BGCOLOR="#FFFFFF">1</TD><TD BGCOLOR="white" PORT="itervar">i1: int32(kDataPar)<br/>range(min=(rc.outer*64), ext=64)</TD></TR><TR><TD PORT="IterVar_1_2" BGCOLOR="#FFFFFF">2</TD><TD BGCOLOR="white" PORT="itervar">i2: int32(kDataPar)<br/>range(min=(floordiv(floormod(nn.outer.outer.ff.outer.outer.fused.yy.outer.outer.fused.xx.outer.outer.fused.nn.outer.inner.fused.ff.outer.inner.fused.yy.outer.inner.fused, 28), 4)*4), ext=6)</TD></TR><TR><TD PORT="IterVar_1_3" BGCOLOR="#FFFFFF">3</TD><TD BGCOLOR="white" PORT="itervar">i3: int32(kDataPar)<br/>range(min=(xx.outer.inner*14), ext=16)</TD></TR><TR><TD COLSPAN="2">[tir.if_then_else(((((i2 &gt;= 1)<br/> &amp;&amp; (i2 &lt; 29)) &amp;&amp; (i3 &gt;= 1)) &amp;<br/>&amp; (i3 &lt; 29)), data[i0, i1, (i2<br/> - 1), (i3 - 1)], 0f)]</TD></TR></TABLE>> margin=0 shape=none]
	Stage_2 [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4"> <TR><TD BGCOLOR="lightgrey" COLSPAN="2" PORT="stage">kernel<br/>Scope: </TD></TR></TABLE>> margin=0 shape=none]
	Stage_3 [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4"> <TR><TD BGCOLOR="lightgrey" COLSPAN="2" PORT="stage">compute.local<br/>Scope: local</TD></TR><TR><TD PORT="IterVar_3_11" BGCOLOR="#FFFFFF">0</TD><TD BGCOLOR="white" PORT="itervar">nn.c.outer.outer.outer: int32(<br/>kDataPar)<br/>range(min=0, ext=1)</TD></TR><TR><TD PORT="IterVar_3_17" BGCOLOR="#FFFFFF">1</TD><TD BGCOLOR="white" PORT="itervar">ff.c.outer.outer.outer: int32(<br/>kDataPar)<br/>range(min=0, ext=1)</TD></TR><TR><TD PORT="IterVar_3_23" BGCOLOR="#FFFFFF">2</TD><TD BGCOLOR="white" PORT="itervar">yy.c.outer.outer.outer: int32(<br/>kDataPar)<br/>range(min=0, ext=1)</TD></TR><TR><TD PORT="IterVar_3_29" BGCOLOR="#FFFFFF">3</TD><TD BGCOLOR="white" PORT="itervar">xx.c.outer.outer.outer: int32(<br/>kDataPar)<br/>range(min=0, ext=1)</TD></TR><TR><TD PORT="IterVar_3_12" BGCOLOR="#FFFFFF">4</TD><TD BGCOLOR="white" PORT="itervar">nn.c.outer.outer.inner: int32(<br/>kDataPar)<br/>range(min=0, ext=1)</TD></TR><TR><TD PORT="IterVar_3_18" BGCOLOR="#FFFFFF">5</TD><TD BGCOLOR="white" PORT="itervar">ff.c.outer.outer.inner: int32(<br/>kDataPar)<br/>range(min=0, ext=1)</TD></TR><TR><TD PORT="IterVar_3_24" BGCOLOR="#FFFFFF">6</TD><TD BGCOLOR="white" PORT="itervar">yy.c.outer.outer.inner: int32(<br/>kDataPar)<br/>range(min=0, ext=1)</TD></TR><TR><TD PORT="IterVar_3_30" BGCOLOR="#FFFFFF">7</TD><TD BGCOLOR="white" PORT="itervar">xx.c.outer.outer.inner: int32(<br/>kDataPar)<br/>range(min=0, ext=1)</TD></TR><TR><TD PORT="IterVar_3_31" BGCOLOR="#FAD7A0">8</TD><TD BGCOLOR="white" PORT="itervar">rc.outer: int32(kCommReduce)<br/>range(min=0, ext=8)</TD></TR><TR><TD PORT="IterVar_3_33" BGCOLOR="#FAD7A0">9</TD><TD BGCOLOR="white" PORT="itervar">ry.outer: int32(kCommReduce)<br/>range(min=0, ext=1)</TD></TR><TR><TD PORT="IterVar_3_35" BGCOLOR="#FAD7A0">10</TD><TD BGCOLOR="white" PORT="itervar">rx.outer: int32(kCommReduce)<br/>range(min=0, ext=1)</TD></TR><TR><TD PORT="IterVar_3_10" BGCOLOR="#FFFFFF">11</TD><TD BGCOLOR="white" PORT="itervar">nn.c.outer.inner: int32(kDataP<br/>ar)<br/>range(min=0, ext=1)</TD></TR><TR><TD PORT="IterVar_3_16" BGCOLOR="#FFFFFF">12</TD><TD BGCOLOR="white" PORT="itervar">ff.c.outer.inner: int32(kDataP<br/>ar)<br/>range(min=0, ext=32)</TD></TR><TR><TD PORT="IterVar_3_22" BGCOLOR="#FFFFFF">13</TD><TD BGCOLOR="white" PORT="itervar">yy.c.outer.inner: int32(kDataP<br/>ar)<br/>range(min=0, ext=2)</TD></TR><TR><TD PORT="IterVar_3_28" BGCOLOR="#FFFFFF">14</TD><TD BGCOLOR="white" PORT="itervar">xx.c.outer.inner: int32(kDataP<br/>ar)<br/>range(min=0, ext=2)</TD></TR><TR><TD PORT="IterVar_3_32" BGCOLOR="#FAD7A0">15</TD><TD BGCOLOR="white" PORT="itervar">rc.inner: int32(kCommReduce)<br/>range(min=0, ext=64)</TD></TR><TR><TD PORT="IterVar_3_34" BGCOLOR="#FAD7A0">16</TD><TD BGCOLOR="white" PORT="itervar">ry.inner: int32(kCommReduce)<br/>range(min=0, ext=3)</TD></TR><TR><TD PORT="IterVar_3_36" BGCOLOR="#FAD7A0">17</TD><TD BGCOLOR="white" PORT="itervar">rx.inner: int32(kCommReduce)<br/>range(min=0, ext=3)</TD></TR><TR><TD PORT="IterVar_3_8" BGCOLOR="#FFFFFF">18</TD><TD BGCOLOR="white" PORT="itervar">nn.c.inner: int32(kDataPar)<br/>range(min=0, ext=1)</TD></TR><TR><TD PORT="IterVar_3_14" BGCOLOR="#FFFFFF">19</TD><TD BGCOLOR="white" PORT="itervar">ff.c.inner: int32(kDataPar)<br/>range(min=0, ext=4)</TD></TR><TR><TD PORT="IterVar_3_20" BGCOLOR="#FFFFFF">20</TD><TD BGCOLOR="white" PORT="itervar">yy.c.inner: int32(kDataPar)<br/>range(min=0, ext=2)</TD></TR><TR><TD PORT="IterVar_3_26" BGCOLOR="#AED6F1">21</TD><TD BGCOLOR="white" PORT="itervar">xx.c.inner: int32(kVectorized)<br/>range(min=0, ext=7)</TD></TR><TR><TD COLSPAN="2">[reduce(combiner=comm_reducer(<br/>result=[(x + y)], lhs=[x], rhs<br/>=[y], identity_element=[0f]), <br/>source=[(pad_temp[nn.c, rc, (y<br/>y.c + ry), (xx.c + rx)]*kernel<br/>[ff.c, rc, ry, rx])], init=[],<br/> axis=[iter_var(rc, range(min=<br/>0, ext=512)), iter_var(ry, ran<br/>ge(min=0, ext=3)), iter_var(rx<br/>, range(min=0, ext=3))], where<br/>=(bool)1, value_index=0)]</TD></TR></TABLE>> margin=0 shape=none]
	Stage_4 [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4"> <TR><TD BGCOLOR="lightgrey" COLSPAN="2" PORT="stage">compute<br/>Scope: </TD></TR><TR><TD PORT="IterVar_4_25" BGCOLOR="#F5B7B1">0</TD><TD BGCOLOR="white" PORT="itervar">nn.outer.outer.ff.outer.outer.<br/>fused.yy.outer.outer.fused.xx.<br/>outer.outer.fused.nn.outer.inn<br/>er.fused.ff.outer.inner.fused.<br/>yy.outer.inner.fused: int32(kP<br/>arallelized)<br/>range(min=0, ext=28)</TD></TR><TR><TD PORT="IterVar_4_19" BGCOLOR="#FFFFFF">1</TD><TD BGCOLOR="white" PORT="itervar">xx.outer.inner: int32(kDataPar)<br/>range(min=0, ext=2)</TD></TR><TR><TD PORT="IterVar_4_5" BGCOLOR="#FFFFFF">2</TD><TD BGCOLOR="white" PORT="itervar">nn.inner: int32(kDataPar)<br/>range(min=0, ext=1)</TD></TR><TR><TD PORT="IterVar_4_9" BGCOLOR="#FFFFFF">3</TD><TD BGCOLOR="white" PORT="itervar">ff.inner: int32(kDataPar)<br/>range(min=0, ext=128)</TD></TR><TR><TD PORT="IterVar_4_13" BGCOLOR="#FFFFFF">4</TD><TD BGCOLOR="white" PORT="itervar">yy.inner: int32(kDataPar)<br/>range(min=0, ext=4)</TD></TR><TR><TD PORT="IterVar_4_17" BGCOLOR="#AED6F1">5</TD><TD BGCOLOR="white" PORT="itervar">xx.inner: int32(kVectorized)<br/>range(min=0, ext=14)</TD></TR><TR><TD COLSPAN="2">[compute.local[nn, ff, yy, xx]]</TD></TR></TABLE>> margin=0 shape=none]
	Stage_0 -> ROOT [color="#000000"]
	Stage_1 -> Stage_3:IterVar_3_31 [color="#000000"]
	Stage_2 -> ROOT [color="#000000"]
	Stage_3 -> Stage_4:IterVar_4_19 [color="#000000"]
	Stage_4 -> ROOT [color="#000000"]
	ROOT [label=ROOT margin=0 shape=oval]
}
